{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Crabuter\\\\noteBook\\\\frontend\\\\src\\\\context\\\\NoteState.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport noteContext from \"./noteContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NoteState = props => {\n  _s();\n  const localHost = \"https://notebook-backend-peef.onrender.com\";\n  const [note, setNote] = useState([]);\n\n  // get notes\n  // api call\n  const getNotes = async () => {\n    try {\n      const response = await fetch(`${localHost}/api/notes/allnotes`, {\n        method: \"GET\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"auth-token\": localStorage.getItem('authToken')\n        }\n      });\n      const data = await response.json();\n      setNote(data);\n    } catch (error) {\n      console.error(\"Error:\", error);\n    }\n  };\n\n  // addNote\n  const addNote = async (title, description, tag) => {\n    try {\n      const response = await fetch(`${localHost}/api/notes/addnote`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"auth-token\": localStorage.getItem('authToken')\n        },\n        body: JSON.stringify({\n          title,\n          description,\n          tag\n        })\n      });\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n      const data = await response.json();\n      setNote(note.concat(data));\n    } catch (error) {\n      console.error(\"Error:\", error);\n    }\n  };\n\n  // updateNote\n  const updateNote = async (id, title, description, tag) => {\n    console.log(\"deleteClick with \" + id);\n    try {\n      const response = await fetch(`${localHost}/api/notes/updatenote/${id}`, {\n        method: \"PUT\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"auth-token\": localStorage.getItem('authToken')\n        },\n        body: JSON.stringify({\n          title,\n          description,\n          tag\n        })\n      });\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n    } catch (error) {\n      console.error(\"Error:\", error);\n    }\n  };\n\n  // deleteNote\n  const deleteNote = async id => {\n    try {\n      const response = await fetch(`${localHost}/api/notes/deletenote/${id}`, {\n        method: \"DELETE\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"auth-token\": localStorage.getItem('authToken')\n        }\n      });\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n    } catch (error) {\n      console.error(\"Error:\", error);\n    }\n    const newNote = note.filter(n => {\n      return n._id !== id;\n    });\n    setNote(newNote);\n  };\n  return /*#__PURE__*/_jsxDEV(noteContext.Provider, {\n    value: {\n      note,\n      addNote,\n      deleteNote,\n      getNotes,\n      updateNote\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 5\n  }, this);\n};\n_s(NoteState, \"n0pOCwXdaD9GIdB/5HaMu+TZyuU=\");\n_c = NoteState;\nexport default NoteState;\nvar _c;\n$RefreshReg$(_c, \"NoteState\");","map":{"version":3,"names":["useState","noteContext","jsxDEV","_jsxDEV","NoteState","props","_s","localHost","note","setNote","getNotes","response","fetch","method","headers","localStorage","getItem","data","json","error","console","addNote","title","description","tag","body","JSON","stringify","ok","Error","status","concat","updateNote","id","log","deleteNote","newNote","filter","n","_id","Provider","value","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Crabuter/noteBook/frontend/src/context/NoteState.js"],"sourcesContent":["import { useState } from \"react\";\r\nimport noteContext from \"./noteContext\";\r\n\r\nconst NoteState = (props) => {\r\n  const localHost = \"https://notebook-backend-peef.onrender.com\";\r\n  const [note, setNote] = useState([]);\r\n  \r\n  // get notes\r\n  // api call\r\n  const getNotes = async () => {\r\n    try {\r\n      const response = await fetch(`${localHost}/api/notes/allnotes`, {\r\n        method: \"GET\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          \"auth-token\":localStorage.getItem('authToken'),\r\n        },\r\n      });\r\n      const data = await response.json();\r\n      setNote(data);\r\n    } catch (error) {\r\n      console.error(\"Error:\", error);\r\n    }\r\n  };\r\n\r\n\r\n\r\n  // addNote\r\n  const addNote = async(title, description, tag) => {\r\n    try {\r\n      const response = await fetch(`${localHost}/api/notes/addnote`, {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          \"auth-token\":localStorage.getItem('authToken'),\r\n        },\r\n        body: JSON.stringify({title,description,tag})\r\n      });\r\n      if (!response.ok) {\r\n        throw new Error(`HTTP error! status: ${response.status}`);\r\n      }\r\n      const data = await response.json();\r\n      setNote(note.concat(data));\r\n      \r\n\r\n    } catch (error) {\r\n      console.error(\"Error:\", error);\r\n    }\r\n  };\r\n\r\n\r\n\r\n  // updateNote\r\n  const updateNote = async (id,title, description, tag) =>{\r\n    console.log(\"deleteClick with \" + id);\r\n    try {\r\n      const response = await fetch(`${localHost}/api/notes/updatenote/${id}`, {\r\n        method: \"PUT\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          \"auth-token\":localStorage.getItem('authToken'),\r\n        },\r\n        body: JSON.stringify({title,description,tag})\r\n      });\r\n      if (!response.ok) {\r\n        throw new Error(`HTTP error! status: ${response.status}`);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error:\", error);\r\n    }\r\n  }\r\n\r\n\r\n\r\n\r\n  // deleteNote\r\n  const deleteNote = async (id) => {\r\n    try {\r\n      const response = await fetch(`${localHost}/api/notes/deletenote/${id}`, {\r\n        method: \"DELETE\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          \"auth-token\":localStorage.getItem('authToken'),\r\n        },\r\n      });\r\n      if (!response.ok) {\r\n        throw new Error(`HTTP error! status: ${response.status}`);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error:\", error);\r\n    }\r\n\r\n    const newNote = note.filter((n) => {\r\n      return n._id !== id;\r\n    });\r\n    setNote(newNote);\r\n  };\r\n\r\n  return (\r\n    <noteContext.Provider value={{ note, addNote, deleteNote, getNotes,updateNote }}>\r\n      {props.children}\r\n    </noteContext.Provider>\r\n  );\r\n};\r\nexport default NoteState;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}